name: V5 Code Scan

on:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  quality-gate-code-check:
    runs-on: 
      group: cvs-linux-self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '>=20.9.0'

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      - name: Disable Auto Plugin Install
        run: |
          mkdir -p ~/.sf
          echo '{"plugins":{"autoInstall":false}}' > ~/.sf/sf-config.json

      - name: Install Code Analyzer Plugin v5
        run: |
          sf plugins uninstall @salesforce/plugin-code-analyzer || true
          sf plugins install @salesforce/plugin-code-analyzer@5.1.0

      - name: Confirm Only v5 Plugin Is Present
        run: sf plugins | grep code-analyzer

      - name: Get GitHub Username of Commit Author
        id: commit-author
        run: |
          COMMIT_SHA=${{ github.sha }}
          REPO=${{ github.repository }}
          echo "Fetching GitHub username for commit SHA: $COMMIT_SHA"
          GITHUB_USERNAME=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/${REPO}/commits/${COMMIT_SHA}" \
            | jq -r '.author.login')
          if [[ -z "$GITHUB_USERNAME" || "$GITHUB_USERNAME" == "null" ]]; then
            echo " GitHub username not found. Falling back to Git author name."
            GITHUB_USERNAME=$(git log -1 --pretty=format:'%an')
          fi
          echo "commit-author=$GITHUB_USERNAME" >> $GITHUB_OUTPUT
          echo "GITHUB_USERNAME=$GITHUB_USERNAME" >> $GITHUB_ENV

      - name: Get Repository and Branch Info
        id: get-info
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          COMMIT_LABEL=$(git log -1 --pretty=format:'%s')
          echo "FILE_TITLE=Code Scanner Report_${REPO_NAME}_${BRANCH_NAME}_${COMMIT_LABEL}" >> $GITHUB_ENV
          echo "TARGET_BRANCH=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Get changed files
        id: get-changes
        run: |
          mkdir -p temp_scanner_files
          > changed_cls_lwc_files.txt
          > scanner-report.csv
          echo "rule,engine,severity,tags,file,startLine,startColumn,endLine,endColumn,message,resources,Commit,ActualLine,TargetBranch" >> scanner-report.csv

          changed_files=$(git diff --name-only HEAD~1 HEAD -- '*.cls' '*.js')
          echo "Changed files: $changed_files"

          if [ -z "$changed_files" ]; then
            echo "No changes to scan."
            exit 0
          fi

          for file in $changed_files; do
            echo "Processing $file..."

            if [[ "$file" == *.cls ]]; then
              echo "Running PMD scan for Apex..."
              sf code-analyzer run \
                --workspace "$file" \
                --rule-selector AvoidHardcodingId \
                --output-file partial_scan.csv \
                --config-file code-analyzer.yml || echo "Apex scan failed"

            elif [[ "$file" == *.js ]]; then
              echo "Running ESLint scan for JS..."
              mkdir -p force-app/main/default/lwc/tmpLwcComponent
              newPath="force-app/main/default/lwc/tmpLwcComponent/tmpLwcComponent.js"
              cp "$file" "$newPath"
              sf code-analyzer run \
                --workspace "$newPath" \
                --engine eslint \
                --output-file partial_scan.csv || echo "JS scan failed"
              rm -f "$newPath"
            fi

            # Combine reports with safe padding for missing columns
            if [ -f partial_scan.csv ] && [ -s partial_scan.csv ]; then
              tail -n +2 partial_scan.csv | awk -F',' -v OFS=',' -v commit_author="${{ env.GITHUB_USERNAME }}" -v target_branch="${{ env.TARGET_BRANCH }}" '{
                while (NF < 14) { $NF = $NF ",N/A"; } 
                $12 = commit_author; 
                $14 = target_branch; 
                print $0 
              }' >> scanner-report.csv
            fi
          done

      - name: Display Final Scanner Report
        run: |
          echo "===== FINAL REPORT ====="
          cat scanner-report.csv

      - name: Fail build on high severity
        run: |
          high_count=$(awk -F',' 'NR>1 && $3 ~ /^[3-9]$/ { count++ } END { print count+0 }' scanner-report.csv)
          echo "High Severity Violations: $high_count"
          if [ "$high_count" -gt 0 ]; then
            echo "Blocking commit due to high severity violations."
            exit 1
          else
            echo "No blocking violations."
          fi
