name: V5 Code Scan

on:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  quality-gate-code-check:
    runs-on: 
      group: cvs-linux-self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '>=20.9.0'

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      - name: Disable Auto Plugin Install
        run: |
          mkdir -p ~/.sf
          echo '{"plugins":{"autoInstall":false}}' > ~/.sf/sf-config.json

      - name: Install Code Analyzer Plugin v5
        run: |
          sf plugins uninstall @salesforce/plugin-code-analyzer || true
          sf plugins install @salesforce/plugin-code-analyzer@5.1.0

      - name: Confirm Only v5 Plugin Is Present
        run: sf plugins | grep code-analyzer

      - name: Get GitHub Username of Commit Author
        id: commit-author
        run: |
          COMMIT_SHA=${{ github.sha }}
          REPO=${{ github.repository }}
          GITHUB_USERNAME=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" "https://api.github.com/repos/${REPO}/commits/${COMMIT_SHA}" | jq -r '.author.login')
          if [[ -z "$GITHUB_USERNAME" || "$GITHUB_USERNAME" == "null" ]]; then
            GITHUB_USERNAME=$(git log -1 --pretty=format:'%an')
          fi
          echo "GITHUB_USERNAME=$GITHUB_USERNAME" >> $GITHUB_ENV

      - name: Get Repository and Branch Info
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          COMMIT_LABEL=$(git log -1 --pretty=format:'%s' | tr ' ' '_' | tr -cd 'A-Za-z0-9_.-')
          FILE_TITLE="Code Scanner Report_${REPO_NAME}_${BRANCH_NAME}_${COMMIT_LABEL}"
          REPORT_FILE="${COMMIT_LABEL}_V5.csv"
          echo "FILE_TITLE=$FILE_TITLE" >> $GITHUB_ENV
          echo "TARGET_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV
          echo "REPORT_FILE=$REPORT_FILE" >> $GITHUB_ENV

      - name: Get changed lines and create temp files
        run: |
          mkdir -p temp_scanner_files
          > changed_cls_lwc_files.txt
          > scanner-report.csv
          echo "rule,engine,severity,tags,file,startLine,startColumn,endLine,endColumn,message,resources,Commit,ActualLine,TargetBranch" >> scanner-report.csv

          changed_files=$(git diff --name-only HEAD~1 HEAD -- '*.cls' '*.js')
          if [ -z "$changed_files" ]; then
            exit 0
          fi

          for file in $changed_files; do
            cp "$file" "temp_scanner_files/$(basename $file)"
            echo "temp_scanner_files/$(basename $file)" >> changed_cls_lwc_files.txt
          done

      - name: Run Salesforce Code Analyzer on changed files
        run: |
          files=$(cat changed_cls_lwc_files.txt)
          if [ -z "$files" ]; then
            echo "No files to scan."
            exit 0
          fi
          for file in $files; do
            echo "Analyzing $file..."
            if [[ "$file" == *.cls ]]; then
              sf code-analyzer run \
                --workspace "$file" \
                --rule-selector ApexCRUDViolation \
                --rule-selector ApexBadCrypto \
                --rule-selector ApexDangerousMethods \
                --rule-selector ApexInsecureEndpoint \
                --rule-selector ApexOpenRedirect \
                --rule-selector ApexSharingViolations \
                --rule-selector ApexSOQLInjection \
                --rule-selector ApexSuggestUsingNamedCred \
                --rule-selector ApexXSSFromEscapeFalse \
                --rule-selector ApexXSSFromURLParam \
                --rule-selector AvoidDebugStatements \
                --rule-selector AvoidNonRestrictiveQueries \
                --rule-selector EagerlyLoadedDescribeSObjectResult \
                --rule-selector OperationWithHighCostInLoop \
                --rule-selector OperationWithLimitsInLoop \
                --rule-selector ApexCSRF \
                --rule-selector AvoidDirectAccessTriggerMap \
                --rule-selector AvoidHardcodingId \
                --rule-selector EmptyCatchBlock \
                --rule-selector UnusedLocalVariable \
                --rule-selector QueueableWithoutFinalizer \
                --rule-selector IfElseStmtsMustUseBraces \
                --rule-selector ForLoopsMustUseBraces \
                --output-file partial_scan.csv \
                --config-file code-analyzer.yml || echo "Apex scan failed"
            elif [[ "$file" == *.js ]]; then
              mkdir -p force-app/main/default/lwc/tmpLwcComponent
              newPath="force-app/main/default/lwc/tmpLwcComponent/tmpLwcComponent.js"
              cp "$file" "$newPath"
              sf code-analyzer run \
                --workspace "$newPath" \
                --engine eslint \
                --output-file partial_scan.csv \
                --config-file code-analyzer.yml || echo "JS scan failed"
              rm -f "$newPath"
            fi
            if [ -f partial_scan.csv ] && [ -s partial_scan.csv ]; then
              tail -n +2 partial_scan.csv | awk -F',' -v OFS=',' -v commit_author="$GITHUB_USERNAME" -v target_branch="$TARGET_BRANCH" '{ while (NF<14) { $NF = $NF ",N/A" }; $12=commit_author; $14=target_branch; print $0 }' >> scanner-report.csv
            fi
          done

      - name: Display Final Scanner Report
        run: cat scanner-report.csv

      - name: Authenticate with Salesforce
        run: |
          response=$(curl -X POST "https://test.salesforce.com/services/oauth2/token" \
            -d "grant_type=password" \
            -d "client_id=${{ secrets.SF_CLIENT_ID }}" \
            -d "client_secret=${{ secrets.SF_CLIENT_SECRET }}" \
            -d "username=${{ secrets.SF_USERNAME }}" \
            -d "password=${{ secrets.SF_PASSWORD }}")
          SF_ACCESS_TOKEN=$(echo "$response" | jq -r '.access_token')
          echo "SF_ACCESS_TOKEN=$SF_ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Upload Scanner Report to Salesforce
        run: |
          if [ $(tail -n +2 scanner-report.csv | wc -l) -eq 0 ]; then
            echo "No violations to upload."
            exit 0
          fi
          curl -X POST "https://service360--arpoc2.sandbox.my.salesforce.com/services/data/v61.0/sobjects/ContentVersion" \
            -H "Authorization: Bearer $SF_ACCESS_TOKEN" \
            -H "Content-Type: multipart/form-data" \
            -F "entity_content={\"Title\": \"$FILE_TITLE\", \"PathOnClient\": \"scanner-report.csv\"};type=application/json" \
            -F "VersionData=@scanner-report.csv;type=text/csv"

      - name: Save scanner report artifact
        run: |
          mkdir -p /tmp/artifact_backup
          cp scanner-report.csv /tmp/artifact_backup/${REPORT_FILE}

      - name: Checkout Scanner_Reports Branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if git ls-remote --exit-code --heads origin Scanner_Reports; then
            git checkout Scanner_Reports
          else
            git checkout -b Scanner_Reports
            git push --set-upstream origin Scanner_Reports
          fi

      - name: Commit and Push Scanner Report
        run: |
          mkdir -p Artifact1
          cp /tmp/artifact_backup/${REPORT_FILE} Artifact1/${REPORT_FILE}
          git add Artifact1/${REPORT_FILE}
          git commit -m "Auto-update scanner report (${REPORT_FILE})" || echo "No changes to commit"
          git push origin Scanner_Reports

      - name: Block PR on Severity
        run: |
          high_count=$(awk -F',' 'NR>1 && $3 ~ /^[3-9]$/ { count++ } END { print count+0 }' scanner-report.csv)
          if [ "$high_count" -gt 0 ]; then
            echo "Blocking due to high severity issues."
            exit 1
          fi
