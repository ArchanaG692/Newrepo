name: Salesforce Code Analyzer v5

on:
  push:
    branches:
      - "**"

permissions:
  contents: write

jobs:
  static-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install and Upgrade Salesforce CLI
        run: |
          npm install --global @salesforce/cli
          sf update --force

      - name: Disable Auto Plugin Auto-Install
        run: |
          mkdir -p ~/.sf
          echo '{"plugins":{"autoInstall":false}}' > ~/.sf/sf-config.json

      - name: Uninstall conflicting plugins
        run: |
          sf plugins uninstall @salesforce/sfdx-scanner || true
          sf plugins uninstall @salesforce/plugin-code-analyzer || true

      - name: Install Code Analyzer Plugin v5.1.0
        run: |
          sf plugins install @salesforce/plugin-code-analyzer@5.1.0
          sf plugins update

      - name: Confirm CLI & Plugin Versions
        run: |
          sf --version
          sf plugins

      - name: Create logs folder (for log_folder path)
        run: mkdir -p logs

      - name: Run Salesforce Code Analyzer
        run: |
          sf code-analyzer run \
            --workspace "force-app/main/default/classes/Demo.cls" \
            --rule-selector AvoidDebugStatements \
            --rule-selector AvoidHardcodingId \
            --output-format csv \
            --output-file scanner-report.csv \
            --config-file code-analyzer.yml

      - name: Upload Scanner Report CSV
        uses: actions/upload-artifact@v4
        with:
          name: code-analyzer-report
          path: scanner-report.csv

      - name: Ensure Scanner Report Exists
        if: always()
        run: |
          if [ ! -s scanner-report.csv ]; then
            echo "No scanner report generated, creating a dummy report."
            echo "Problem,Severity,File,TempLine,Column,Rule,Description,URL,Category,Engine,Commit,ActualLine" > scanner-report.csv
          fi

      - name: Generate Unique File Name for Scanner Report
        run: |
          COMMIT_LABEL=$(git log -1 --pretty=format:'%s' | tr ' ' '_' | tr -cd '[:alnum:]_-')
          REPORT_FILE="${COMMIT_LABEL}.csv"
          echo "REPORT_FILE=$REPORT_FILE" >> $GITHUB_ENV

      - name: Save Scanner Report Before Branch Checkout
        run: |
          mkdir -p /tmp/artifact_backup
          cp scanner-report.csv /tmp/artifact_backup/${{ env.REPORT_FILE }}

      - name: Commit and Push Scanner Report to `scanner-reports` Branch
        if: always()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH_NAME="scanner-reports"
          if git ls-remote --exit-code --heads origin "$BRANCH_NAME"; then
            git fetch origin $BRANCH_NAME:$BRANCH_NAME
            git switch $BRANCH_NAME
          else
            git checkout -b $BRANCH_NAME
            git push --set-upstream origin $BRANCH_NAME
          fi

          mkdir -p Artifact
          cp /tmp/artifact_backup/${{ env.REPORT_FILE }} Artifact/${{ env.REPORT_FILE }}
          git add Artifact/${{ env.REPORT_FILE }}
          git commit -m "ðŸ”„ Auto-update scanner report (${{ env.REPORT_FILE }}) in Artifact folder"
          git push origin $BRANCH_NAME
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
